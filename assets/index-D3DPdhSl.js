var T=Object.defineProperty;var D=(n,e,t)=>e in n?T(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>D(n,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const h of s)if(h.type==="childList")for(const l of h.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function t(s){const h={};return s.integrity&&(h.integrity=s.integrity),s.referrerPolicy&&(h.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?h.credentials="include":s.crossOrigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function o(s){if(s.ep)return;s.ep=!0;const h=t(s);fetch(s.href,h)}})();let A=[];const z=50,F=Math.floor(window.innerWidth/z),H=Math.floor(window.innerHeight/z),W="#a9c0a6",p={tileSize:z,mapWidth:F,mapHeight:H,mapColor:W,mapTileArray:A},I={ingame:!1};class i{constructor(e,t){a(this,"x");a(this,"y");this.x=e,this.y=t}}const m={width:115,height:62,position:new i(27,18)},_="/LF-SE-Minor-Project_Dungeon-Dread/assets/bush-fjx7lCik.png",c={drum:{width:112,height:161,position:new i(14,49)},stone:{width:136,height:164,position:new i(36,552)}},q="/LF-SE-Minor-Project_Dungeon-Dread/assets/_stone_drum_-tRkNoq3q.png",L=new Image;L.src=_;const S=new Image;S.src=q;class f{constructor(e,t,o,s){a(this,"position");a(this,"tileType");a(this,"isObstacle");a(this,"tileSize");this.position=e,this.tileType=t,this.isObstacle=o,this.tileSize=s}draw(e){switch(this.tileType){case"bush":e.drawImage(L,m.position.x,m.position.y,m.width,m.height,this.position.x,this.position.y,this.tileSize,this.tileSize);break;case"empty":e.fillStyle=p.mapColor,e.fillRect(this.position.x*this.tileSize,this.position.y*this.tileSize,this.tileSize,this.tileSize);break;case"stone":e.drawImage(S,c.stone.position.x,c.stone.position.y,c.stone.width,c.stone.height,this.position.x,this.position.y,c.stone.width/3,c.stone.height/3);break;case"drum":e.drawImage(S,c.drum.position.x,c.drum.position.y,c.drum.width,c.drum.height,this.position.x,this.position.y,this.tileSize,this.tileSize);break}}}function x(n,e){const t=Math.ceil(n),o=Math.floor(e);return Math.floor(Math.random()*(o-t+1)+t)}const y={collideableObjs:[]};class R{constructor(e){a(this,"tileSize");a(this,"mapHeight");a(this,"mapWidth");this.tileSize=e,this.mapHeight=Math.floor(window.innerHeight/e),this.mapWidth=Math.floor(window.innerWidth/e),this.initialize(),this.collectCollideableobj()}collectCollideableobj(){p.mapTileArray.forEach(e=>{e.forEach(t=>{t.isObstacle&&y.collideableObjs.push(t)})})}initialize(){for(let e=0;e<this.mapHeight;e++){p.mapTileArray[e]=[];for(let t=0;t<this.mapWidth;t++)if(t===0||e===0||e===this.mapHeight-1||t===this.mapWidth-1)p.mapTileArray[e][t]=new f(new i(t*this.tileSize,e*this.tileSize),"bush",!0,this.tileSize);else{const o=x(1,100);o%2==0&&o<10?o>5?p.mapTileArray[e][t]=new f(new i(t*this.tileSize,e*this.tileSize),"drum",!0,this.tileSize):p.mapTileArray[e][t]=new f(new i(t*this.tileSize,e*this.tileSize),"stone",!0,this.tileSize):p.mapTileArray[e][t]=new f(new i(t*this.tileSize,e*this.tileSize),"empty",!1,this.tileSize)}}}draw(e){p.mapTileArray.forEach(t=>{t.forEach(o=>{o.draw(e)})})}}class M{constructor(e,t,o,s,h,l){a(this,"position");a(this,"team");a(this,"lookingLeft");a(this,"healthpoint");a(this,"width");a(this,"height");a(this,"spritePosition",0);a(this,"velocity",new i(0,0));this.position=e,this.team=t,this.lookingLeft=o,this.healthpoint=s,this.width=h,this.height=l}}const N="/LF-SE-Minor-Project_Dungeon-Dread/assets/hero-CXBE-ivq.png",d={width:35,height:44,positionRight:[new i(6,6),new i(6,71),new i(6,124),new i(6,172),new i(6,124),new i(6,71)],positionLeft:[new i(64,6),new i(67,71),new i(64,124),new i(67,172),new i(64,124),new i(67,71)]},v=new Image;v.src=N;class B extends M{constructor(){super(...arguments);a(this,"isMoving",!1);a(this,"acceleration",new i(1,1));a(this,"speedLimit",5)}checkCollision(){let t=!1,o=y.collideableObjs[0];return y.collideableObjs.forEach(s=>{s.position.y+s.tileSize>=this.position.y&&s.position.y<=this.position.y+this.height&&s.position.x+s.tileSize>=this.position.x&&s.position.x+s.tileSize<=this.position.x+s.tileSize+this.width&&(t=!0,o=s)}),{collided:t,collidedObj:o}}moveLeft(t){const o=t?-1*this.acceleration.x:this.acceleration.x;Math.abs(this.velocity.x)<this.speedLimit&&(this.velocity.x+=o),this.lookingLeft=t}moveUp(t){const o=t?-1*this.acceleration.y:this.acceleration.y;Math.abs(this.velocity.y)<this.speedLimit&&(this.velocity.y+=o)}draw(t){const o=this.checkCollision();if(!o.collided)(Math.abs(this.velocity.x)>1||Math.abs(this.velocity.y)>2)&&(this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.isMoving=!0);else{const h=o.collidedObj.position.x<this.position.x?1:-1,l=o.collidedObj.position.y<this.position.y?1:-1;this.position.x+=h,this.position.y+=l}const s=this.lookingLeft?d.positionLeft:d.positionRight;if(this.isMoving){let l=Math.floor(this.spritePosition/5)%6;t.drawImage(v,s[l].x,s[l].y,d.width,d.height,this.position.x,this.position.y,this.width,this.height),this.spritePosition++}else t.drawImage(v,s[0].x,s[0].y,d.width,d.height,this.position.x,this.position.y,this.width,this.height)}}const U="/LF-SE-Minor-Project_Dungeon-Dread/assets/spwan-6_Ug9n4C.png",X="/LF-SE-Minor-Project_Dungeon-Dread/assets/type1-CCCx1Bt1.png",u={width:31,height:17,position:[new i(76,17),new i(224,17),new i(410,17),new i(576,17),new i(742,17),new i(76,118),new i(224,118),new i(410,118),new i(576,118),new i(742,118),new i(48,217)]},w={width:24,height:34,positionLeft:[new i(10,3),new i(118,3),new i(226,3),new i(335,3),new i(443,3),new i(6,114),new i(443,3),new i(335,3),new i(226,3),new i(118,3)],positionRight:[new i(479,2),new i(587,2),new i(696,3),new i(804,5),new i(914,5),new i(482,112),new i(914,5),new i(804,5),new i(696,3),new i(587,2)]},b=new Image,k=new Image;b.src=U;k.src=X;class j extends M{constructor(){super(...arguments);a(this,"isSpwaned",!1);a(this,"tileSize",this.width);a(this,"attackInterval",null)}checkCollision(){let t=!1,o=!1,s=y.collideableObjs[0];return y.collideableObjs.forEach(h=>{h.position.y+h.tileSize>=this.position.y&&h.position.y<=this.position.y+this.height&&h.position.x+h.tileSize>=this.position.x&&h.position.x+h.tileSize<=this.position.x+h.tileSize+this.width&&(t=!0,s=h)}),r.position.y+r.height>=this.position.y&&r.position.y<=this.position.y+this.height&&r.position.x+r.width>=this.position.x&&r.position.x+r.width<=this.position.x+r.width+this.width?(o=!0,s=r,this.attackInterval||(this.attackInterval=setInterval(()=>{r.healthpoint-=2,console.log(r.healthpoint)},1200))):(clearInterval(this.attackInterval),this.attackInterval=null),{collided:t,collidedObj:s,collidedHero:o}}update(){const t=this.checkCollision();this.lookingLeft=this.position.x>r.position.x;const o=Math.sqrt((this.position.x-r.position.x)**2+(this.position.y-r.position.y)**2),s=new i((this.position.x-r.position.x)/o,(this.position.y-r.position.y)/o),h=Math.sqrt(2);if(this.velocity=new i(-s.x*h,-s.y*h),t.collidedHero&&(this.velocity.x=0,this.velocity.y=0),!t.collided)this.position.x+=this.velocity.x,this.position.y+=this.velocity.y;else{const l=t.collidedObj.position.x<this.position.x?1:-1,P=t.collidedObj.position.y<this.position.y?1:-1;this.position.x+=l,this.position.y+=P}}draw(t){const o=this.lookingLeft?w.positionLeft:w.positionRight;this.update();let h=Math.floor(this.spritePosition/5)%10;t.fillText(String(this.healthpoint),this.position.x,this.position.y),t.drawImage(k,o[h].x,o[h].y,w.width,w.height,this.position.x,this.position.y,this.width,this.height),this.spritePosition++}spwan(t){let s=Math.floor(this.spritePosition/10)%10;t.drawImage(b,u.position[s].x,u.position[s].y,u.width,u.height,this.position.x,this.position.y,this.width,this.height),this.spritePosition++,s>=9&&(this.isSpwaned=!0,this.spritePosition=0,this.velocity=new i(1,1),this.healthpoint=10)}}const V="/LF-SE-Minor-Project_Dungeon-Dread/assets/map-BCq2fiXg.png",O=new Image;O.src=V;const G=new R(p.tileSize),r=new B(new i(window.innerWidth/2,window.innerHeight/2),"blue",!0,120,d.width,d.height),C=[];function K(){setInterval(()=>{const n=new j(new i(x(0,window.innerWidth),x(0,window.innerHeight)),"red",!0,100,w.width,w.height);C.push(n)},1500)}function $(n){n.drawImage(O,0,0,window.innerWidth,window.innerHeight),G.draw(n),r.draw(n),C.forEach(e=>{e.isSpwaned?e.draw(n):e.spwan(n)})}function E(n){n==null||n.clearRect(0,0,g.width,g.height),$(n),I.ingame&&requestAnimationFrame(()=>{E(n)})}function J(n){I.ingame=!0,K(),E(n)}function Q(){window.addEventListener("keydown",n=>{switch(n.key.toLowerCase()){case"a":r.moveLeft(!0);break;case"d":r.moveLeft(!1);break;case"w":r.moveUp(!0);break;case"s":r.moveUp(!1);break}}),window.addEventListener("keyup",()=>{r.velocity=new i(0,0),r.isMoving=!1})}const g=document.getElementById("canvas"),Y=g.getContext("2d");Q();g&&(g.width=window.innerWidth,g.height=window.innerHeight,J(Y));
